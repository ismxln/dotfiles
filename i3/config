# This file has been auto-generated by i3-config-wizard(1).
# It will not be overwritten, so edit it as you like.
#
# Should you change your keyboard layout some time, delete
# this file and re-run i3-config-wizard(1).
#

exec xrandr --output DP-1 --primary --mode 1920x1080 --pos 1920x0 --rotate normal --output HDMI-1 --mode 1920x1080 --pos 0x0 --rotate normal --output DVI-D-1 --off
#exec xrandr --output HDMI-1 --left-of DP-1
#exec xrandr --output DP-1 --mode 1920x1080 --rate 144.00
#exec xrandr --output HDMI-1 --mode 1920x1080 --rate 60.00

# i3 config file (v4)
#
# Please see https://i3wm.org/docs/userguide.html for a complete reference!

set $mod Mod4

# Font for window titles. Will also be used by the bar unless a different font
# is used in the bar {} block below.

#font pango:monospace 8
font pango:Fira Code 0
#font pango:DejaVu Sans Mono 8

# Start XDG autostart .desktop files using dex. See also
# https://wiki.archlinux.org/index.php/XDG_Autostart
exec --no-startup-id dex --autostart --environment i3

# In idle state, screen will turn off after 333 seconds, system will suspend after 666 seconds.
exec --no-startup-id xset dpms 333 666

# The combination of xss-lock, nm-applet and pactl is a popular choice, so
# they are included here as an example. Modify as you see fit.

# xss-lock grabs a logind suspend inhibit lock and will use i3lock to lock the
# screen before suspend. Use loginctl lock-session to lock your screen.
exec --no-startup-id xss-lock --transfer-sleep-lock -- i3lock --nofork

# NetworkManager is the most popular way to manage wireless networks on Linux,
# and nm-applet is a desktop environment-independent system tray GUI for it.
exec --no-startup-id nm-applet

# Use pactl to adjust volume in PulseAudio.
set $refresh_i3status killall -SIGUSR1 i3status
bindsym XF86AudioRaiseVolume exec --no-startup-id pactl set-sink-volume @DEFAULT_SINK@ +10% && $refresh_i3status
bindsym XF86AudioLowerVolume exec --no-startup-id pactl set-sink-volume @DEFAULT_SINK@ -10% && $refresh_i3status
bindsym XF86AudioMute exec --no-startup-id pactl set-sink-mute @DEFAULT_SINK@ toggle && $refresh_i3status
bindsym XF86AudioMicMute exec --no-startup-id pactl set-source-mute @DEFAULT_SOURCE@ toggle && $refresh_i3status


# Screenshots
bindsym Ctrl+Shift+Print exec --no-startup-id maim "/hdd/pictures/screenshots/$(date).png"
bindsym $mod+Print exec --no-startup-id maim --window $(xdotool getactivewindow) "/hdd/pictures/screenshots/$(date).png"
bindsym Shift+Print exec --no-startup-id maim --select "/hdd/pictures/screenshots/$(date).png"

# Clipboard Screenshots
bindsym Ctrl+Print exec --no-startup-id maim | xclip -selection clipboard -t image/png
bindsym Ctrl+$mod+Print exec --no-startup-id maim --window $(xdotool getactivewindow) | xclip -selection clipboard -t image/png
bindsym Print exec --no-startup-id maim --select | xclip -selection clipboard -t image/png

# Use Mouse+$mod to drag floating windows to their wanted position
floating_modifier $mod

# move tiling windows via drag & drop by left-clicking into the title bar,
# or left-clicking anywhere into the window while holding the floating modifier.
tiling_drag modifier titlebar

# bindsym Mod1+space exec setxkbmap -layout us,ru -option grp:switch
# start a terminal

#bindsym $mod+Return exec i3-sensible-terminal
bindsym $mod+Return exec alacritty

# kill focused window
bindsym $mod+Shift+q kill

# start dmenu (a program launcher)
#bindsym $mod+d exec --no-startup-id dmenu_run
# or u can run for all not just apps
bindsym $mod+d exec "rofi -modi drun,run -show drun"
#bindsym $mod+d exec --no-startup-id rofi -show drun

# A more modern dmenu replacement is rofi:
# bindcode $mod+40 exec "rofi -modi drun,run -show drun"
# There also is i3-dmenu-desktop which only displays applications shipping a
# .desktop file. It is a wrapper around dmenu, so you need that installed.
# bindcode $mod+40 exec --no-startup-id i3-dmenu-desktop

# change focus
bindsym $mod+j focus left
bindsym $mod+k focus down
bindsym $mod+l focus up
bindsym $mod+semicolon focus right

# alternatively, you can use the cursor keys:
bindsym $mod+Left focus left
bindsym $mod+Down focus down
bindsym $mod+Up focus up
bindsym $mod+Right focus right

# move focused window
bindsym $mod+Shift+j move left
bindsym $mod+Shift+k move down
bindsym $mod+Shift+l move up
bindsym $mod+Shift+semicolon move right

# alternatively, you can use the cursor keys:
bindsym $mod+Shift+Left move left
bindsym $mod+Shift+Down move down
bindsym $mod+Shift+Up move up
bindsym $mod+Shift+Right move right

# split in horizontal orientation
bindsym $mod+h split h

# split in vertical orientation
bindsym $mod+v split v

# enter fullscreen mode for the focused container
bindsym $mod+f fullscreen toggle

# change container layout (stacked, tabbed, toggle split)
bindsym $mod+s layout stacking
bindsym $mod+w layout tabbed
bindsym $mod+e layout toggle split

# toggle tiling / floating
bindsym $mod+Shift+space floating toggle

# change focus between tiling / floating windows
bindsym $mod+space focus mode_toggle

# focus the parent container
bindsym $mod+a focus parent

# focus the child container
#bindsym $mod+d focus child

# Define names for default workspaces for which we configure key bindings later on.
# We use variables to avoid repeaiting the names in multiple places.i
# ws1=Code, ws2=Firefox, ws3=Telegram  | 2   = 3   = 1  | 
set $ws1 "1"
set $ws2 "2"
set $ws3 "3"
set $ws4 "4"
set $ws5 "5"
set $ws6 "6"
set $ws7 "7"
set $ws8 "8"
set $ws9 "9"
set $ws10 "10"

# switch to workspace
bindsym $mod+1 workspace $ws1
bindsym $mod+2 workspace $ws2
bindsym $mod+3 workspace $ws3
bindsym $mod+4 workspace $ws4
bindsym $mod+5 workspace $ws5
bindsym $mod+6 workspace $ws6
bindsym $mod+7 workspace $ws7
bindsym $mod+8 workspace $ws8
bindsym $mod+9 workspace $ws9
bindsym $mod+0 workspace $ws10

# move focused container to workspace
bindsym $mod+Shift+1 move container to workspace $ws1
bindsym $mod+Shift+2 move container to workspace $ws2
bindsym $mod+Shift+3 move container to workspace $ws3
bindsym $mod+Shift+4 move container to workspace $ws4
bindsym $mod+Shift+5 move container to workspace $ws5
bindsym $mod+Shift+6 move container to workspace $ws6
bindsym $mod+Shift+7 move container to workspace $ws7
bindsym $mod+Shift+8 move container to workspace $ws8
bindsym $mod+Shift+9 move container to workspace $ws9
bindsym $mod+Shift+0 move container to workspace $ws10

#assign [class="Alacritty"] $workspace3; exec alacritty --working-directory=/hdd/anim

#assign [class="Firefox"] $workspace1; exec firefox --new-window --display=:0.0 --new-instance --no-remote; workspace $workspace1 output HDMI-1

#assign [class="Alacritty"] $workspace2; exec alacritty

#workspace $ws1 output HDMI-1
#workspace $ws2 output DP-1
#workspace $ws3 output DP-1
#assign [class="Firefox"] 1
#assign [class="alacritty"] 2

# xprop | grep CLASS - click on app - take second value.

#for_window [class="firefox"] move to workspace $ws1
#for_window [class="alacritty"] move to workspace $ws2
#for_window [class="telegram-desktop"] move to workspace $ws3
#for_window [class="discord"] move to workspace $ws3
#exec --no-startup-id i3-msg 'workspace $ws1; exec firefox'
#exec --no-startup-id i3-msg 'workspace $ws2; exec alacritty'
#exec --no-startup-id i3-msg 'workspace $ws3; exec telegram-desktop'
#exec --no-startup-id i3-msg 'workspace $ws3; exec discord'
#assign [class="firefox"] $ws1
#assign [class="alacritty"] $ws2
#assign [class="discord"] $ws3
#assign [class="telegram-desktop"] $ws3

# reload the configuration file
bindsym $mod+Shift+c reload
# restart i3 inplace (preserves your layout/session, can be used to upgrade i3)
bindsym $mod+Shift+r restart
# exit i3 (logs you out of your X session)
bindsym $mod+Shift+e exec "i3-nagbar -t warning -m 'You pressed the exit shortcut. Do you really want to exit i3? This will end your X session.' -B 'Yes, exit i3' 'i3-msg exit'"

# resize window (you can also use the mouse for that)
mode "resize" {
        # These bindings trigger as soon as you enter the resize mode

        # Pressing left will shrink the window’s width.
        # Pressing right will grow the window’s width.
        # Pressing up will shrink the window’s height.
        # Pressing down will grow the window’s height.
        bindsym j resize shrink width 10 px or 10 ppt
        bindsym k resize grow height 10 px or 10 ppt
        bindsym l resize shrink height 10 px or 10 ppt
        bindsym semicolon resize grow width 10 px or 10 ppt

        # same bindings, but for the arrow keys
        bindsym Left resize shrink width 10 px or 10 ppt
        bindsym Down resize grow height 10 px or 10 ppt
        bindsym Up resize shrink height 10 px or 10 ppt
        bindsym Right resize grow width 10 px or 10 ppt

        # back to normal: Enter or Escape or $mod+r
        bindsym Return mode "default"
        bindsym Escape mode "default"
        bindsym $mod+r mode "default"
}

bindsym $mod+r mode "resize"

# wallpaper
# exec_always feh --bg-scale /hdd/pictures/maxresdefault123123312.jpg
exec_always simplenote --no-sandbox

# polybar
exec_always polybar-msg cmd quit
exec_always --no-startup-id polybar
client.focused #458588 #98971a #d79921

gaps inner 5
gaps outer 3

exec picom

# Start i3bar to display a workspace bar (plus the system information i3status
# finds out, if available)
set $bg-color #2f343f
#set $inactive-bg-color #2f343f
#set $text-color #f3f4f5
#set $inactive-text-color #676E7D
#set $urgent-bg-color #E53935
#bar {
        # status_command i3status
#        status_command i3blocks -c .config/i3/i3blocks.conf
#        position bottom
#        colors {
#                background $bg-color
#                separator #757575
#                #                   border             background          text                
#                focused_workspace   $bg-color          $bg-color           $text-color          
#                inactive_workspace  $inactive-bg-color $inactive-bg-color  $inactive-text-color
#                urgent_workspace    $urgent-bg-color   $urgent-bg-color    $text-color
#
#        }
#}
# lock screen
bindsym $mod+shift+x exec i3lock --color "$bg-color"
